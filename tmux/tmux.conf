
# Enable `open` on OSX
set -g default-command "reattach-to-user-namespace -l $SHELL"

# Make it to where when you split a pane, it changes to the CWD of the previous
# pane. When you create a new window, however, it uses your home directory
bind c new-window -c "$HOME"
bind % split-window -h -c '#{pane_current_path}'  # Split panes horizontal
bind '"' split-window -v -c '#{pane_current_path}'  # Split panes vertically

# Or maybe you want to be able to reorder windows in status bar by drag & drop?
bind-key -n MouseDrag1Status swap-window -t=

# This allows you to press page up in normal mode and have it scroll back into
# the history. If you page down back to the bottom of the history, it
# automatically exits copy mode. If there is an alternate screen (i.e. a full
# screen app like vim, less, mutt, etc) then it does not enter copy mode, but
# passes through the key press. This is because alternate screen apps usually
# handle page up/down itself and also will have no scroll back.
bind-key -T root PPage if-shell -F "#{alternate_on}" "send-keys PPage" "copy-mode -e; send-keys PPage"
bind-key -t vi-copy PPage page-up
bind-key -t vi-copy NPage page-down

# ----------[ Mouse Mode ]----------------------------------------
#

# Enable mouse mode
set -g mouse on
# Cause mouse scroll to detect alternate screens
bind-key -T root WheelUpPane \
    if-shell -Ft= "#{?pane_in_mode,1,#{mouse_button_flag}}" \
        "send-keys -M" \
        "if-shell -Ft= '#{alternate_on}' \
            'select-pane -t=; send-keys Up' \
            'select-pane -t=; copy-mode -e'"
bind-key -T root WheelDownPane \
    if-shell -Ft= "#{?pane_in_mode,1,#{mouse_button_flag}}" \
        "select-pane -t=; send-keys -M" \
        "select-pane -t=; send-keys Down"
# Copy to pasteboard from copy-mode
bind-key -temacs-copy c copy-pipe "pbcopy"
