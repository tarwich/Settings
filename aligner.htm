<html>
	<head>
		<style type='text/css'>
            table {
                border-collapse: collapse    ;
    		}

            div.center-column {
                margin-left    : 10%         ;
                width          : 80%         ;
    		}

            textarea.data {
                width          : 100%        ;
                height         : 40%         ;
                font-family    : monospace   ;
				white-space    : pre;
				word-wrap      : normal;
    		}

            input.format {
                width          : 100%        ;
    		}

            ul.options {
                display        : block       ; 
                text-align     : left        ; 
                margin         : 0px         ;
                padding        : 0px         ;
    		}
    		
            ul.options li {
                display        : inline-block;
    		}

            input[name=tabwidth] { 
                width          : 20          ; 
                text-align     : center      ;
    		}

            table.options td {
                width          : 90px        ;
                white-space    : nowrap      ;
    		}

            .github {
                text-align     : right       ;
    		}

            .github a {
                padding-left   : 10px        ;
    		}
		</style>
		<script type='text/javascript'>
			(function() { 
			// var 
			ns = {};
			window.ns = ns;

			// Check to see if the document is complete
			ns.checkReady = function() {
				// If the document is loaded
				if(document.readyState == "complete") {
					// Remove the readystate timer
					window.clearInterval(ns.interval);
					// Find format input element
					ns.$format = document.querySelector("input.format");
					// Listen to format changes
					ns.$format.addEventListener("keyup", ns.format);
					// Find theInput
					ns.$input = document.querySelector("#theInput");
					// Get all the inputs we need
					for(name in {padLeft:1, sort:1, tabwidth:1})
						// Find input name='foo' and assign to ns.$foo
						ns["$" + name] = document.querySelector("input[name="+name+"]");
					
					// Listen to input changes
					(function() {
						for(var i=0; i<arguments.length; ++i) {
							arguments[i].addEventListener("keyup", ns.format);
							arguments[i].addEventListener("click", ns.format);
						}
					})(ns.$input, ns.$padLeft, ns.$sort, ns.$tabwidth);

					// Find theOutput
					(ns.$output = document.querySelector("#theOutput"))
						// Listen to the theOutput clicks
						.addEventListener("click", ns.selectResult);
					// Start off with a format
					ns.format();
				}
			};

			// Format the block of text
			ns.format = function() {
				var format = ns.$format.value.trim();
				var components = format.split(/\s+/);
				var input = ns.$input.value;
				var lines = input
					.replace(/\s+$/, "") // rtrim
					.split("\n");
				var condom = 0;
				var padLeft= ns.$padLeft.checked;
				var sort   = ns.$sort.checked   ;
				var tabwidth = parseInt(ns.$tabwidth.value) || 0;
				// The column that we'll be aligning to
				var oldColumn = 0, column = 0;
				
				var regex = new RegExp("\\s*(" + components.join("|") + ")");

				// If there is a tabwidth in the first place, then untab lines
				if(tabwidth > 0) 
				// Go through each line
				for(var i=0, iMax=lines.length; i<iMax; ++i) {
					// Get the current line
					var line = lines[i];
					
					// Go through each character in this line
					for(var j=0, jMax=line.length; j<jMax; ++j) {
						var c = line[j];

						// If this character is a tab, then 
						if(c == "\t") {
							line = 
								// Before the tab
								line.substr(0, j) 
								// Spaces to replace the tab
								+ new Array(1 + (tabwidth - (j % tabwidth))).join(" ")
								// After the tab
								+ line.substr(j+1)
								;
						}
					}
					
					// Put the candle back
					lines[i] = line;
				}

				while(true) {
					// Go through all the lines
					for(var i=0, iMax=lines.length; i<iMax; ++i) {
						var line = lines[i];
						var offset = line.substr(oldColumn).search(regex);
						
						if(offset > -1) {
							// Move the column to this offset
							column = Math.max(column, offset + oldColumn);
						}
					}

					for(var i=0, iMax=lines.length; i<iMax; ++i) {
						var line = lines[i];
						var offset = line.substr(oldColumn).search(regex);
						
						if(offset > -1) {
							offset += oldColumn;
							
							line = 
								// Everything left of the column
								line.substr(0, offset)
								// Padding based on longest line
								+ new Array(column+1+(padLeft?1:0)-offset).join(" ")
								// Everything from the column onward
								+ line.substr(offset).replace(/^\s*/, "")
								;
							lines[i] = line;
						}
					}

					if(column + 1 == oldColumn) break;
					// Remember the previous column
					oldColumn = column + 1 + (padLeft ? 1 : 0);
					if(++condom > 100) break;
				}

				if(sort) lines.sort();

				// Retab lines if tabwidth is set
				if(tabwidth > 0)
				for(var i=0, iMax=lines.length; i<iMax; ++i) {
					// Get leading whitespace
					var leader = lines[i].match(/^ */)[0];
					lines[i] = 
						// Replace leading whitespace with tabs
						leader.replace(new RegExp(" {"+tabwidth+"}", "g"), "\t")
						// Get everything after the leader
						+ lines[i].substr(leader.length) 
				}

				ns.$output.value = lines.join("\n");
			};

			ns.selectResult = function(e) {
				// Resolve event
				e = e || window.event;
				// Don't bubble this event
				e.cancelPropogation = true;

				// Select from the beginning
				ns.$output.selectionStart = 0;
				// Select to the end
				ns.$output.selectionEnd = ns.$output.value.length
			};

			// Add a ready state change listener
			ns.interval = window.setInterval(ns.checkReady, 100);
			})("aligner");
		</script>
	</head>
	<body>
		<div class='center-column'>
			<table style='width: 100%'>
				<tr>
					<td>
						Format: 
					</td>
					<td style='width: 100%'>
						<input type='text' class='format' value='; :' />
					</td>
				</tr>
			</table>
			<table class='options'><tr>
				<td>
					Pad Left: 
					<input type='checkbox' name='padLeft' />
				</td>
				<td>
					Sort: 
					<input type='checkbox' name='sort' />
				</td>
				<td>
					Tabstop: 
					<input type='text' name='tabwidth' value='4' />
				</td>
			</tr></table>
			<textarea class='data' id='theInput'>
switch(something) {
	case 1: doSomething(); break; // Do something
	case 2: doSomethingElse(); break ; // Do something else
	case 33: doSomethingElse(); break; // Do something else
			</textarea>
<!--
	default: 
		fail("Not a chance"); // Didn't expect this
		break;
}
-->
			<textarea class='data' id='theOutput'></textarea>
			<div class='github link'>
				<a class='download' href='https://raw.github.com/tarwich/Settings/master/aligner.htm'>download from github</a>
			</div>
		</div>
	</body>
</html>
